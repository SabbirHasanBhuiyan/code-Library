///   ***   ---   |||		 In the name of ALLAH		|||   ---   ***   ///

/*
https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=499
*/

#include<bits/stdc++.h>
using namespace std;


typedef long long ll;


struct info {
    int u, v, w;
};

const ll infLL = 9e18;
const int mx = 1e3+123;
vector<info> edges;
ll dist[mx];

bool belmanFord ( int s, int n, int m )
{
    for ( int i = 0; i < n; i++ ) dist[i] = infLL;
    dist[s] = 0;

    for ( int i = 1; i < n; i++ ) {

        for ( auto &e : edges) {
            int u = e.u;
            int v = e.v;
            int w = e.w;

            if ( dist[u] + w < dist[v] ) {
                dist[v] = (dist[u] + w );
            }
        }
    }

    bool isCycle = false;

    for ( auto &e : edges) {
        int u = e.u;
        int v = e.v;
        int w = e.w;

        if ( dist[u] + w < dist[v] ) {
            isCycle=true;
        }
    }


    return isCycle;
}


int main()
{

	int t;
	cin >> t;

	while ( t-- ) {
	    edges.clear();
	    int n, m;
	    cin >> n >> m;

	    for ( int i = 0; i < m; i++ ) {
	        int u, v, w;
	        cin >> u >> v >> w;
	        edges.push_back ( { u, v, w } );
	    }

	    if ( belmanFord ( 0, n, m ) == true ) {
	        cout << "possible\n";
	    }

	    else {
	        cout << "not possible\n";
	    }
	}


	return 0;
}









