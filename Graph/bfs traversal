//Bismillah
/*
graph traversal using bfs
https://www.hackerearth.com/problem/algorithm/connected-components-in-a-graph/
*/

#include<bits/stdc++.h>
using namespace std;

void bfs (vector<int>adj[],int vis[],int u )
{
    vis[u] =  1;

    queue<int>q;
    q.push(u);
    while(!q.empty()){
        int u=q.front();
        q.pop();
        for(auto &v: adj[u]){
            if(!vis[v]){
                q.push(v);
                vis[v]=1;
            }
        }
    }

    return;
}

int main()
{

    int n, m;
    cin >> n >> m;

    vector<int>adj[n+1];
    int vis[n+1];
    for(int i=1;i<=n;i++)   vis[i]=0;
    for ( int i = 1; i <= m; i++ ) {
        int u, v;
        cin >> u >> v;
        adj[u].push_back ( v );
        adj[v].push_back ( u );
    }

    int cnt=0;
    for(int i=1;i<=n;i++){
        if(!vis[i]){
            bfs(adj,vis,i);
            cnt++;
        }
    }

    cout<<cnt<<endl;

    
    return 0;
}
