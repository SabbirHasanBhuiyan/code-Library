//Bismillah
/*
graph traversal using dfs
https://www.hackerearth.com/problem/algorithm/connected-components-in-a-graph/
*/

#include<bits/stdc++.h>
using namespace std;

void dfs (vector<int>adj[],int vis[],int u )
{
    vis[u] =  1;

    for ( auto v : adj[u] ) {
        if (! vis[v] ) {
            dfs (adj,vis, v );
        }
    }

    return;
}

int main()
{

    int n, m;
    cin >> n >> m;

    vector<int>adj[n+1];
    int vis[n+1];
    for(int i=1;i<=n;i++)   vis[i]=0;
    for ( int i = 1; i <= m; i++ ) {
        int u, v;
        cin >> u >> v;
        adj[u].push_back ( v );
        adj[v].push_back ( u );
    }

    int cnt=0;
    for(int i=1;i<=n;i++){
        if(!vis[i]){
            dfs(adj,vis,i);
            cnt++;
        }
    }

    cout<<cnt<<endl;

    return 0;
}
